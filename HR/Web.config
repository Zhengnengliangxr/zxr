<?xml version="1.0"?>
<!--
    注意: 除了手动编辑此文件以外，您还可以使用 Web 管理工具来
    配置应用程序的设置。
    可以使用 Visual Studio 中的“网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在    machine.config.comments 中，
   该文件通常位于
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
  <appSettings/>
  <connectionStrings>
    <!--连接数据库-->
    <add name="connection" connectionString="data source=(local);Integrated Security=True;Initial Catalog=HR
"/>
  </connectionStrings>

  <system.web>
    <customErrors mode="Off"/>
    <!--可以用自定义错误页替换所看到的当前错误页,此属性后添加，可能存在网络安全问题-->
    <!--防止连接超时
		-->
    <httpRuntime maxRequestLength="102400" executionTimeout="720"/>
    <!--
            设置 compilation debug="true" 可将调试符号
            插入已编译的页面中。
            但由于这会影响性能，因此只在开发过程中将此值
            设置为 true。
        -->
    <compilation debug="true" targetFramework="4.0">
    </compilation>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
    <!--	<authentication mode="Windows"/>
		
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。
            具体说来，
            开发人员通过该节可以配置
            要显示的 HTML 错误页以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <globalization requestEncoding="gb2312" responseEncoding="gb2312"/>
    <pages validateRequest="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
    </pages>
  </system.web>
  <system.webServer>
    <defaultDocument>
      <files>
        <add value="index.aspx"/>
      </files>
    </defaultDocument>
  </system.webServer>
</configuration>
